@model DataGate.Web.ViewModels.TimeSeries.TimeSeriesViewModel

@{
    var timeseriesDates = @Html.Raw(Json.Serialize(Model.TSPriceDates));
    var timeseriesProviders = @Html.Raw(Json.Serialize(Model.TSTypeProviders));
}

<div>
    <canvas id="canvas-chart-aum"></canvas>
</div>

<script>
        (function () {
            let ctx = document.getElementById('canvas-chart-aum').getContext('2d');
            window.myLine = new Chart(ctx, setConfigChart(@timeseriesDates, @timeseriesProviders));

            function setConfigChart(timeseriesDates, timeseriesProviders) {
                const config = {
                    type: 'line',
                    data: {
                        labels: timeseriesDates,
                        datasets: []
                    },
                    options: {
                        responsive: true,
                        title: {
                            display: true,
                            text: 'AuM For ShareClass'
                        },
                        tooltips: {
                            mode: 'index',
                            intersect: false,
                        },
                        hover: {
                            mode: 'nearest',
                            intersect: true
                        },
                        scales: {
                            x: {
                                display: true,
                                scaleLabel: {
                                    display: true,
                                    labelString: 'Month'
                                }
                            },
                            y: {
                                display: true,
                                scaleLabel: {
                                    display: true,
                                    labelString: 'Value'
                                }
                            }
                        }
                    }
                };

                $.each(timeseriesProviders, function (index, provider) {
                    const allPricesValues = JSON.parse('@Html.Raw(Json.Serialize(Model.TSAllPriceValues))');
                    const currentPriceValue = allPricesValues
                        .filter(ts => ts[2] === provider)
                        .map(ts => ts[1]);

                    config.data.datasets.push({
                        label: provider,
                        backgroundColor: window.chartColors[index],
                        borderColor: window.chartColors[index],
                        data: currentPriceValue,
                        fill: false,
                    });
                });
                return config;
            }
        })();

        // ________________________________________________________
        //
        // Chart js for Asset under management

</script>