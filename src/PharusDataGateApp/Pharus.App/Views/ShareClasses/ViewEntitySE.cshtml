@model Pharus.App.Models.ViewModels.Entities.SpecificEntityViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var controllerName = this.ViewContext.RouteData.Values["controller"].ToString();

    var timeseriesDates = @Html.Raw(Json.Serialize(Model.TSPriceDates));
    var timeseriesProviders = @Html.Raw(Json.Serialize(Model.TSTypeProviders));
}

@section Styles{
    <style>
        body {
            background-image: none;
        }
    </style>
}

<form asp-controller="ShareClasses"
      class="justify-content-between"
      method="post">

    <partial name="SpecificEntity/_Toolbar" />
    <div class="d-flex justify-content-between">
        <partial name="SpecificEntity/_Info" />
        <div class="w-60">
            <div style="width:90%;">
                <canvas id="aumSC_Canvas"></canvas>
            </div>
            <partial name="SpecificEntity/_Load_Documents" />
        </div>
    </div>

    <div class="row w-25 ml-3">
        <label class="text-torshia m-1 pr-3">SHARECLASS ADDITIONAL INFORMATION</label>
        <select class="custom-select-lg select-pharus form-control input-sm"
                id="shareClassAdditionalInfSelect"
                asp-for="SelectAdditionalInf">
            <option value="" selected disabled>Select</option>
            <option value="TimelineChanges">Timeline Changes</option>
            <option value="AllDocuments">All Documents</option>
            <option value="AllAgreements">All Agreements</option>
        </select>
    </div>

    <partial name="SpecificEntity/_AllDocuments" />
    <partial name="SpecificEntity/_AllAgreements" />
    <partial name="SpecificEntity/_Timeline" />
</form>

<form asp-controller="ShareClasses"
      asp-action="UploadDocument"
      method="post"
      enctype="multipart/form-data">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <partial name="SpecificEntity/_UploadDocument" />
</form>

<form asp-controller="ShareClasses"
      asp-action="UploadAgreement"
      method="post"
      enctype="multipart/form-data">
    <input asp-for="EntityId" type="text" hidden>
    <input asp-for="ChosenDate" type="date" hidden>

    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <div class="modal"
         id="upAgrModal"
         role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-body d-grid justify-content-center" id="agrModalBody">
                    @await Html.PartialAsync("SpecificEntity/_UploadAgr")
                </div>
            </div>
        </div>
    </div>
</form>

@section Scripts{
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script src="~/lib/jquery/Chart.js/Chart.min.js"></script>
    <script src="~/lib/jquery/Chart.js/utils.js"></script>
    <script src="~/js/delete/deleteAgreement.js"></script>
    <script src="~/js/delete/deleteDocument.js"></script>
    <script src="~/js/select-additional-info/select-shareclass-addInfo.js"></script>
    <script src="~/js/setDates.js"></script>

    <script>
        window.onload = function () {
            let ctx = document.getElementById('aumSC_Canvas').getContext('2d');
            window.myLine = new Chart(ctx, setConfigChart(@timeseriesDates, @timeseriesProviders));
            manageSideNavBar();
            manageDropdowns();
            setDates();
        };

        if (window.history.replaceState) {
            window.history.replaceState(null, null, window.location.href);
        }

        $(document).ready(function () {
            // ________________________________________________________
            //
            // Delete selected row from documents table by confirming

            const urlDocDel = "/ShareClasses/DeleteDocument";
            passDocUrlToDelete(urlDocDel);

            // ________________________________________________________
            //
            // Delete selected row from agreements table by confirming

            const urlAgrDel = "/ShareClasses/DeleteAgreement";
            passAgrUrlToDelete(urlAgrDel);
        });

        // ________________________________________________________
        //
        // Chart js for Asset under management

        function setConfigChart(timeseriesDates, timeseriesProviders) {
            const config = {
                type: 'line',
                data: {
                    labels: timeseriesDates,
                    datasets: []
                },
                options: {
                    responsive: true,
                    title: {
                        display: true,
                        text: 'AuM For ShareClass'
                    },
                    tooltips: {
                        mode: 'index',
                        intersect: false,
                    },
                    hover: {
                        mode: 'nearest',
                        intersect: true
                    },
                    scales: {
                        x: {
                            display: true,
                            scaleLabel: {
                                display: true,
                                labelString: 'Month'
                            }
                        },
                        y: {
                            display: true,
                            scaleLabel: {
                                display: true,
                                labelString: 'Value'
                            }
                        }
                    }
                }
            };

            $.each(timeseriesProviders, function (index, provider) {
                const allPricesValues = JSON.parse('@Html.Raw(Json.Serialize(Model.TSAllPriceValues))');
                const currentPriceValue = allPricesValues
                    .filter(ts => ts[2] === provider)
                    .map(ts => ts[1]);

                config.data.datasets.push({
                    label: provider,
                    backgroundColor: window.chartColors[index],
                    borderColor: window.chartColors[index],
                    data: currentPriceValue,
                    fill: false,
                });
            });
            return config;
        }
    </script>
}